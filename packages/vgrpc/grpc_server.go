package vgrpc

import (
	"context"
	"fmt"

	invokerpb "vgrpc/invoker" // üëà ƒê·∫∑t alias r√µ r√†ng

	"google.golang.org/protobuf/types/known/structpb"
)

type Server struct {
	invokerpb.UnimplementedInvokerServer
}

func (s *Server) Invoke(ctx context.Context, req *invokerpb.InvokeRequest) (*invokerpb.InvokeReply, error) {
	// Demo: In ra t√™n h√†m ƒë∆∞·ª£c g·ªçi v√† params
	fmt.Println("C 1 loi goi ham tu client:", req.FunctionName)
	fmt.Println("Params:", req.Params)

	// V√≠ d·ª•: gi·∫£ l·∫≠p l·ªói khi g·ªçi function kh√¥ng t·ªìn t·∫°i
	if req.FunctionName == "fail" {
		return nil, fmt.Errorf("function %s not found", req.FunctionName)
	}

	// Tr·∫£ v·ªÅ reply m·∫´u
	replyData, _ := structpb.NewStruct(map[string]interface{}{
		"message": "Called " + req.FunctionName,
	})

	return &invokerpb.InvokeReply{
		Result: replyData,
	}, nil
}
