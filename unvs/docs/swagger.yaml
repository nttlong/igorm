basePath: /api/v1
definitions:
  internal_app_handler_callers.CallerRequest:
    properties:
      args: {}
    type: object
  internal_app_handler_callers.CallerResponse:
    properties:
      error:
        $ref: '#/definitions/internal_app_handler_callers.ErrorResponse'
      results: {}
    type: object
  internal_app_handler_callers.ErrorResponse:
    properties:
      code:
        type: string
      fields:
        items:
          type: string
        type: array
      maxSize:
        type: integer
      message:
        type: string
      values:
        items:
          type: string
        type: array
    type: object
  internal_app_handler_inspector.APIEntry:
    properties:
      args:
        items: {}
        type: array
      callerPath:
        type: string
      results:
        items: {}
        type: array
    type: object
  internal_app_handler_inspector.InspectorResponse:
    properties:
      apiList:
        items:
          $ref: '#/definitions/internal_app_handler_inspector.APIEntry'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: '"OAuth2 Password Flow (Form Submit) - Use for explicit form data submission."'
  title: Go API Example
  version: "1.0"
paths:
  /get/{tenant}/{module}/{action}/{optionalPath}:
    get:
      consumes:
      - application/json
      description: API này cho phép gọi các tính năng cụ thể cho từng tenant và ngôn
        ngữ, với khả năng mở rộng đường dẫn.
      parameters:
      - description: The specific tenant to invoke (e.g., default, name, ...)
        in: path
        name: tenant
        required: true
        type: string
      - description: The module name (e.g., users, products, auth)
        in: path
        name: module
        required: true
        type: string
      - description: The action name (e.g., list, create, detail, login)
        in: path
        name: action
        required: true
        type: string
      - description: Optional additional path segments (e.g., 'sub/item/id'). This
          parameter captures all remaining path segments.
        in: path
        name: optionalPath
        type: string
      - description: The specific ID of the feature. Each UI at frontend will have
          a unique feature ID and must be approved by the backend team.
        in: query
        name: feature
        required: true
        type: string
      - description: The specific language to invoke (e.g., en, vi, pt, ...)
        in: query
        name: lan
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with requested parameters
          schema:
            $ref: '#/definitions/internal_app_handler_callers.CallerResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Lấy thông tin dựa trên tenant, module, action, feature, ngôn ngữ và
        các phân đoạn đường dẫn bổ sung.
      tags:
      - caller
  /hz:
    get:
      consumes:
      - application/json
      description: Trả về chuỗi "Hello World!"
      produces:
      - application/json
      responses:
        "200":
          description: Hello World!
          schema:
            type: string
      summary: Lấy một lời chào đơn giản
      tags:
      - heathz
    post:
      consumes:
      - application/json
      description: Endpoint check the accessibility.
      responses: {}
      summary: Health check endpoint
      tags:
      - Healthz
  /inspector/list:
    post:
      consumes:
      - application/json
      description: Query all api action and domain
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_app_handler_inspector.InspectorResponse'
      summary: Query all api action and domain
      tags:
      - System
  /invoke:
    post:
      consumes:
      - application/json
      description: CallerHandler
      parameters:
      - description: The specific id of feature. Each UI at frontend will have a unique
          feature id and must be approve by backend team.
        in: query
        name: feature
        required: true
        type: string
      - description: The specific action to invoke (e.g., login, register, logout)
        in: query
        name: action
        required: true
        type: string
      - description: The specific module to invoke (e.g., unvs.br.auth.roles, unvs.br.auth.uusers,
          ...)
        in: query
        name: module
        required: true
        type: string
      - description: The specific tenant to invoke (e.g., default, name, ...)
        in: query
        name: tenant
        required: true
        type: string
      - description: The specific language to invoke (e.g., en, pt, ...)
        in: query
        name: lan
        required: true
        type: string
      - description: CallerRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_app_handler_callers.CallerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Response
          schema:
            $ref: '#/definitions/internal_app_handler_callers.CallerResponse'
      security:
      - OAuth2Password: []
      summary: CallerHandler
      tags:
      - caller
  /invoke-form:
    post:
      consumes:
      - multipart/form-data
      description: Handles form data submission including file uploads.
      parameters:
      - description: The specific id of feature. Each UI at frontend will have a unique
          feature id and must be approve by backend team.
        in: query
        name: feature
        required: true
        type: string
      - description: The specific tenant to invoke (e.g., default, name, ...)
        in: query
        name: tenant
        required: true
        type: string
      - description: The specific module to invoke (e.g., unvs.br.auth.roles, unvs.br.auth.uusers,
          ...)
        in: query
        name: module
        required: true
        type: string
      - description: The specific action to invoke (e.g., login, register, logout)
        in: query
        name: action
        required: true
        type: string
      - description: The specific language to invoke (e.g., en, pt, ...)
        in: query
        name: lan
        required: true
        type: string
      - default: '{"code":"R003","name":"test3","description":"example description"}'
        description: JSON stringify from browser
        in: formData
        name: data
        required: true
        type: string
      - description: One or more files to upload
        in: formData
        name: files
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Response
          schema:
            $ref: '#/definitions/internal_app_handler_callers.CallerResponse'
      security:
      - OAuth2Password: []
      summary: Submit handler for form data and file uploads
      tags:
      - caller
  /oauth/token:
    post:
      responses: {}
securityDefinitions:
  OAuth2Password:
    description: '"OAuth2 Password Flow - Enter email/username and password in the
      popup to get token."'
    flow: password
    tokenUrl: /oauth/token
    type: oauth2
swagger: "2.0"
