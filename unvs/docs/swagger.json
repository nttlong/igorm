{
    "swagger": "2.0",
    "info": {
        "description": "\"OAuth2 Password Flow (Form Submit) - Use for explicit form data submission.\"",
        "title": "Go API Example",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/hz": {
            "get": {
                "description": "Trả về chuỗi \"Hello World!\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "heathz"
                ],
                "summary": "Lấy một lời chào đơn giản",
                "responses": {
                    "200": {
                        "description": "Hello World!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Endpoint check the accessibility.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Healthz"
                ],
                "summary": "Health check endpoint",
                "responses": {}
            }
        },
        "/inspector/list": {
            "post": {
                "description": "Query all api action and domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Query all api action and domain",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_app_handler_inspector.InspectorResponse"
                        }
                    }
                }
            }
        },
        "/invoke": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "CallerHandler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caller"
                ],
                "summary": "CallerHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The specific id of feature. Each UI at frontend will have a unique feature id and must be approve by backend team.",
                        "name": "feature",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The specific action to invoke (e.g., login, register, logout)",
                        "name": "action",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The specific module to invoke (e.g., unvs.br.auth.roles, unvs.br.auth.uusers, ...)",
                        "name": "module",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The specific tenant to invoke (e.g., default, name, ...)",
                        "name": "tenant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The specific language to invoke (e.g., en, pt, ...)",
                        "name": "lan",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "CallerRequest",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_app_handler_callers.CallerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/internal_app_handler_callers.CallerResponse"
                        }
                    }
                }
            }
        },
        "/invoke-form": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Handles form data submission including file uploads.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caller"
                ],
                "summary": "Submit handler for form data and file uploads",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The specific id of feature. Each UI at frontend will have a unique feature id and must be approve by backend team.",
                        "name": "feature",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The specific tenant to invoke (e.g., default, name, ...)",
                        "name": "tenant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The specific module to invoke (e.g., unvs.br.auth.roles, unvs.br.auth.uusers, ...)",
                        "name": "module",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The specific action to invoke (e.g., login, register, logout)",
                        "name": "action",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The specific language to invoke (e.g., en, pt, ...)",
                        "name": "lan",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "{\"code\":\"R003\",\"name\":\"test3\",\"description\":\"example description\"}",
                        "description": "JSON stringify from browser",
                        "name": "data",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "One or more files to upload",
                        "name": "files",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/internal_app_handler_callers.CallerResponse"
                        }
                    }
                }
            }
        },
        "/oauth/token": {
            "post": {
                "responses": {}
            }
        }
    },
    "definitions": {
        "internal_app_handler_callers.CallerRequest": {
            "type": "object",
            "properties": {
                "args": {}
            }
        },
        "internal_app_handler_callers.CallerResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/internal_app_handler_callers.ErrorResponse"
                },
                "results": {}
            }
        },
        "internal_app_handler_callers.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxSize": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_app_handler_inspector.APIEntry": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {}
                },
                "callerPath": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "internal_app_handler_inspector.InspectorResponse": {
            "type": "object",
            "properties": {
                "apiList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_app_handler_inspector.APIEntry"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Password": {
            "description": "\"OAuth2 Password Flow - Enter email/username and password in the popup to get token.\"",
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "/oauth/token"
        }
    }
}