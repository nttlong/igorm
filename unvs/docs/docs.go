// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accounts/create": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Tạo một tài khoản người dùng mới với username, email và mật khẩu.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Tạo một tài khoản người dùng mới",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tên của Tenant",
                        "name": "tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Thông tin tài khoản cần tạo",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accounts.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Tạo tài khoản thành công",
                        "schema": {
                            "$ref": "#/definitions/accounts.CreateAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Yêu cầu không hợp lệ (validation errors)",
                        "schema": {
                            "$ref": "#/definitions/accounts.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Email đã tồn tại",
                        "schema": {
                            "$ref": "#/definitions/accounts.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Lỗi nội bộ server",
                        "schema": {
                            "$ref": "#/definitions/accounts.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/login": {
            "post": {
                "description": "Xác thực thông tin đăng nhập của người dùng (email hoặc username) và trả về JWT token nếu thành công.",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Đăng nhập người dùng và nhận JWT token (JSON/Form)",
                "parameters": [
                    {
                        "description": "Thông tin đăng nhập (email/username và mật khẩu)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accounts.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Đăng nhập thành công, trả về JWT token",
                        "schema": {
                            "$ref": "#/definitions/accounts.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Yêu cầu không hợp lệ (validation errors)",
                        "schema": {
                            "$ref": "#/definitions/accounts.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Thông tin đăng nhập không hợp lệ",
                        "schema": {
                            "$ref": "#/definitions/accounts.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Lỗi nội bộ server",
                        "schema": {
                            "$ref": "#/definitions/accounts.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hz": {
            "get": {
                "description": "Trả về chuỗi \"Hello World!\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "heathz"
                ],
                "summary": "Lấy một lời chào đơn giản",
                "responses": {
                    "200": {
                        "description": "Hello World!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Endpoint check the accessibility.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Healthz"
                ],
                "summary": "Health check endpoint",
                "responses": {}
            }
        },
        "/inspector/list": {
            "post": {
                "description": "Query all api action and domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Query all api action and domain",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_app_handler_inspector.InspectorResponse"
                        }
                    }
                }
            }
        },
        "/invoke/{action}": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "CallerHandler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caller"
                ],
                "summary": "CallerHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The specific action to invoke (e.g., login, register, logout)",
                        "name": "action",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CallerRequest",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_app_handler_callers.CallerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/internal_app_handler_callers.CallerResponse"
                        }
                    }
                }
            }
        },
        "/oauth/token": {
            "post": {
                "responses": {}
            }
        }
    },
    "definitions": {
        "accounts.CreateAccountRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "accounts.CreateAccountResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/unvs_internal_model_auth.User"
                }
            }
        },
        "accounts.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "accounts.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "accounts.LoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "description": "Có thể bao gồm thêm thông tin người dùng nếu cần, nhưng không phải mật khẩu hash",
                    "allOf": [
                        {
                            "$ref": "#/definitions/unvs_internal_model_auth.User"
                        }
                    ]
                }
            }
        },
        "internal_app_handler_callers.CallerRequest": {
            "type": "object",
            "properties": {
                "args": {},
                "language": {
                    "type": "string"
                },
                "tenant": {
                    "type": "string"
                }
            }
        },
        "internal_app_handler_callers.CallerResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/internal_app_handler_callers.ErrorResponse"
                },
                "results": {}
            }
        },
        "internal_app_handler_callers.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_app_handler_inspector.InspectorResponse": {
            "type": "object",
            "properties": {
                "apiList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "unvs_internal_model_auth.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "failedLoginCount": {
                    "type": "integer"
                },
                "isLocked": {
                    "type": "boolean"
                },
                "isSupperUser": {
                    "type": "boolean"
                },
                "lastFailedLoginAt": {
                    "type": "string"
                },
                "lastLoginAt": {
                    "type": "string"
                },
                "lastPasswordChangeAt": {
                    "type": "string"
                },
                "roleId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Password": {
            "description": "\"OAuth2 Password Flow - Enter email/username and password in the popup to get token.\"",
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "/oauth/token"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Go API Example",
	Description:      "\"OAuth2 Password Flow (Form Submit) - Use for explicit form data submission.\"",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
